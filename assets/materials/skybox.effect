CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: skybox-vs:vert
      frag: skybox-fs:frag
      properties: &props
        mainColor: { value: [0, 0, 0, 1], editor: { type: color } }
        fogColor:  { value: [1, 1, 1, 1], editor: { type: color } }
      priority: max - 10
      rasterizerState:
        cullMode: none
      depthStencilState:
        depthTest: true
        depthWrite: false
}%

CCProgram skybox-vs %{
  precision highp float;
  #include <legacy/input>
  #include <builtin/uniforms/cc-global>
  #include <legacy/decode-base>
  #include <legacy/local-batch>

  out vec3 v_view;
  out vec3 v_worldPos;

  vec4 vert() {
    vec4 position;
    CCVertInput(position);

    mat4 matWorld;
    CCGetWorldMatrix(matWorld);

    vec4 worldPos = matWorld * position;

    v_worldPos = worldPos.xyz;
    v_view = cc_cameraPos.xyz - worldPos.xyz;

    vec4 ndc = cc_matViewProj * worldPos;
    ndc.z = 0.99999 * ndc.w;

    return ndc;
  }
}%

CCProgram skybox-fs %{
  precision highp float;
  #include <chunks/fog>

  in vec3 v_view;
  in vec3 v_worldPos;

  uniform Constants {
    vec4 mainColor;
    vec4 fogColor;
  };
  
  vec4 frag () {
    vec3 col = applyFog(mainColor.rgb, v_view, v_worldPos);
    return vec4(col, 1.);
  }
}%
