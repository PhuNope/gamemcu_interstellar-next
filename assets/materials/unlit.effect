CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      properties: &props
        mainTexture:            { value: white }
        mainTexture_ST:         { value: [1, 1, 0, 0] }
        mainColor:              { value: [1, 1, 1, 1], editor: { displayName: Albedo, type: color } }
        albedoScale:            { value: [1, 1, 1], target: albedoScaleAndCutoff.xyz }
  - name: transparent
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      properties: *props
      depthStencilState: &d1
        depthTest: true
        depthWrite: false
      blendState: &b1
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
}%

CCProgram unlit-vs %{
  precision highp float;
  #include <legacy/input>
  #include <builtin/uniforms/cc-global>
  #include <legacy/decode-base>
  #include <legacy/local-batch>

  out vec2 v_uv;
  out vec3 v_view;
  out vec3 v_worldPos;

  uniform Constants {
    vec4 mainColor;
    vec4 mainTexture_ST;
    vec4 albedoScaleAndCutoff;
  };

  vec4 vert() {
    vec4 position;
    CCVertInput(position);

    mat4 matWorld;
    CCGetWorldMatrix(matWorld);

    vec4 worldPos = matWorld * position;
    v_worldPos = worldPos.xyz;
    v_view = cc_cameraPos.xyz - worldPos.xyz;
    v_uv = a_texCoord * mainTexture_ST.xy + mainTexture_ST.zw;

    return cc_matViewProj * worldPos;
  }
}%

CCProgram unlit-fs %{
  precision highp float;
  #include <chunks/fog>

  in vec3 v_view;
  in vec3 v_worldPos;
  
  uniform Constants {
    vec4 mainColor;
    vec4 mainTexture_ST;
    vec4 albedoScaleAndCutoff;
  };

  #if USE_TEXTURE
    in vec2 v_uv;
    uniform sampler2D mainTexture;
  #endif

  vec4 frag () {
    vec4 finalColor = mainColor;
    finalColor.rgb *= albedoScaleAndCutoff.xyz;

  #if USE_TEXTURE
    finalColor *= texture(mainTexture, v_uv);
  #endif  

    finalColor.rgb = applyFog(finalColor.rgb, v_view, v_worldPos);
    return finalColor;
  }
}%
